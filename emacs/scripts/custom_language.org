#+TITLE: LANGUAGE SUPPORT FOR MINMACS
#+AUTHOR: Rohit Srinivas R G

* TABLE OF CONTENT :toc_2:
- [[#bluespec-system-verilog-bsv][BLUESPEC SYSTEM VERILOG (BSV)]]
- [[#synopsys-design-constraint-sdc][SYNOPSYS DESIGN CONSTRAINT (SDC)]]
- [[#python][PYTHON]]
- [[#yaml][YAML]]
- [[#markdown-mode][MARKDOWN-MODE]]

* BLUESPEC SYSTEM VERILOG (BSV)
#+begin_src emacs-lisp
  (add-to-list 'load-path "~/.config/emacs/languages/bsv/")
  (add-to-list 'load-path "~/.config/emacs/languages/bsv/emacs20-extras.el")
  (add-to-list 'load-path "~/.config/emacs/languages/bsv/mark.el")

  (autoload 'bsv-mode "bsv-mode" "BSV mode" t )
  (setq auto-mode-alist (cons  '("\\.bsv\\'" . bsv-mode) auto-mode-alist))
  (setq auto-mode-alist (cons  '("\\.defines\\'" . bsv-mode) auto-mode-alist))
  (setq auto-mode-alist (cons '("\\.defs\\'" . bsv-mode) auto-mode-alist))
  (setq bsv-indent-level 2)
  (setq bsv-indent-level-module 2)
  (setq bsv-indent-level-declaration 2)
  (setq bsv-indent-level-directive 2)
  (setq bsv-indent-level-behavioral 2)
  (setq bsv-cexp-indent 2)
  (setq bsv-tab-always-indent nil)

  ;; (add-to-list 'consult-imenu-config 
  ;; 	       '(bsv-mode 
  ;; 		 :toplevel "Modules"
  ;; 		 :types 
  ;; 		 ((?m "Modules" font-lock-function-name-face)
  ;; 		  (?r "Rules" font-lock-function-name-face)		  
  ;; 		  )
  ;; 		 )
  ;; )

  ;;remainder theree is a bsv-indent-alist that defines the the indent variable to be used for each type of block 
#+end_src

* SYNOPSYS DESIGN CONSTRAINT (SDC)
#+begin_src emacs-lisp
(setq auto-mode-alist (cons '("\\.sdc\\'" . tcl-mode) auto-mode-alist))

#+end_src

* PYTHON
#+begin_src emacs-lisp
(use-package anaconda-mode
:config
(add-hook 'python-mode-hook 'anaconda-mode))

#+end_src

* YAML
#+begin_src emacs-lisp
(use-package yaml-mode
:config
(add-to-list 'auto-mode-alist '("\\.yml\\'" . yaml-mode))
(add-hook 'yaml-mode-hook
    '(lambda ()
    (define-key yaml-mode-map "\C-m" 'newline-and-indent)))

)


#+end_src
* MARKDOWN-MODE
#+begin_src emacs-lisp
(use-package markdown-mode
  :ensure t
  :mode ("README\\.md\\'" . gfm-mode)
  :init (setq markdown-command "multimarkdown"))

#+end_src
